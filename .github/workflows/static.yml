# Workflow for deploying PAPABLAST Jump game to GitHub Pages
name: Deploy PAPABLAST Jump to GitHub Pages

on:
  # Trigger on push to the main branch
  push:
    branches: ['main']

# Set the GITHUB_TOKEN permissions for deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment and cancel in-progress deployments if a new one is triggered
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  deploy:
    # Define the environment for the deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    # Define the operating system for the job
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout the repository
        uses: actions/checkout@v4

      # Step 2: Setup Node.js and cache dependencies for faster installs
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: './'

      # Step 3: Install the project dependencies using npm
      - name: Install dependencies
        run: npm install
      - name: Set environment variables
        run: echo "VITE_BASE_URL=/minigame/" >> $GITHUB_ENV
      - name: Build
        run: npm run build
        env:
          VITE_BASE_URL: /minigame/
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 6: Upload the build artifact (the game files) to GitHub Pages
      - name: Upload the build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'  # Make sure the build files are in the 'dist' folder (or 'docs' if using that path)

      # Step 7: Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
