/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */

import { CONFIG } from '../config';

// –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const baseUrl = CONFIG.BASE_URL;

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∏—Ç—å
const gameImages = [
  '/images/player_start_img.png',
  '/images/player_jump.png',
  '/images/player_jump2.png',
  '/images/player_jumped.png',
  '/images/static_platform.png',
  '/images/move_platform.png',
  '/images/broken_platform.png',
  '/images/flash_platform.png',
  '/images/jump_point.png',
  '/images/PAPApoint.png',
  '/images/game_over.png',
  '/images/ticket.png',
  '/images/airdrop.png',
  '/images/auth.png',
  '/images/start_background.png',
  '/images/start_bg.png',
  '/images/layout_bg.png',
  '/images/L1.jpg',
  '/images/L2.jpg',
  '/images/L3.jpg',
  '/images/referrals.png'
];

// –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –æ–±–æ–∏–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –ø—É—Ç–µ–π
const imageCache: Record<string, HTMLImageElement> = {};

// –°—á–µ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏
let totalLoaded = 0;
let totalFailed = 0;

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é —Å —É—á–µ—Ç–æ–º –±–∞–∑–æ–≤–æ–≥–æ URL
 */
export const normalizePath = (src: string): string => {
  // –£–¥–∞–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å–ª–µ—à, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
  const cleanPath = src.startsWith('/') ? src.substring(1) : src;
  
  // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å —Å —É—á–µ—Ç–æ–º baseUrl
  return `${baseUrl}${cleanPath}`;
};

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Promise
 */
const loadImage = (src: string): Promise<HTMLImageElement> => {
  return new Promise((resolve, reject) => {
    const img = new Image();
    img.onload = () => {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à–µ —Å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –ø—É—Ç–µ–º
      imageCache[src] = img;
      
      // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º –ø—É—Ç–µ–º (—Å/–±–µ–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–ª—ç—à–∞)
      const altSrc = src.startsWith('/') ? src.substring(1) : `/${src}`;
      imageCache[altSrc] = img;
      
      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      totalLoaded++;
      
      // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (totalLoaded % 5 === 0 || totalLoaded === gameImages.length) {
        console.log(`üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏: ${totalLoaded}/${gameImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (${Math.round(totalLoaded / gameImages.length * 100)}%)`);
      }
      
      resolve(img);
    };
    img.onerror = (err) => {
      totalFailed++;
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${src}:`, err);
      reject(new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${src}`));
    };
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª—è src
    img.src = normalizePath(src);
  });
};

/**
 * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
 */
export const preloadAllImages = async (): Promise<void> => {
  console.log(`üñºÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫—É ${gameImages.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...`);
  console.log(`üåê –ë–∞–∑–æ–≤—ã–π URL: ${baseUrl}`);
  totalLoaded = 0;
  totalFailed = 0;
  
  try {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Promise.allSettled –≤–º–µ—Å—Ç–æ Promise.all, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è
    const results = await Promise.allSettled(gameImages.map(src => loadImage(src)));
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏
    const fulfilled = results.filter(r => r.status === 'fulfilled').length;
    const rejected = results.filter(r => r.status === 'rejected').length;
    
    console.log('üìä –ò—Ç–æ–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${fulfilled}/${gameImages.length}`);
    if (rejected > 0) {
      console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å: ${rejected}/${gameImages.length}`);
    }
    
    // –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üóÑÔ∏è –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', Object.keys(imageCache).length);
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', error);
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
export const areAllImagesLoaded = (): boolean => {
  return totalLoaded >= gameImages.length;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –∫—ç—à–∞
 */
export const getImageFromCache = (src: string): HTMLImageElement | null => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫—ç—à–µ –Ω–∞–ø—Ä—è–º—É—é
  if (imageCache[src]) {
    return imageCache[src];
  }
  
  // –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å (—Å/–±–µ–∑ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–ª—ç—à–∞)
  const altSrc = src.startsWith('/') ? src.substring(1) : `/${src}`;
  if (imageCache[altSrc]) {
    return imageCache[altSrc];
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—É—Ç–µ–π
  const possiblePaths = [
    src,
    altSrc,
    src.replace(/^\/images\//, 'images/'),
    src.replace(/^images\//, '/images/')
  ];

  for (const path of possiblePaths) {
    if (imageCache[path]) {
      return imageCache[path];
    }
  }

  // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫—ç—à–µ, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ–≥–æ —Å –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø—É—Ç–µ–º
  console.warn(`‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∫—ç—à–µ: ${src}, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ –ª–µ—Ç—É`);
  const img = new Image();
  img.src = normalizePath(src);
  imageCache[src] = img; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  return img;
};

/**
 * –°–µ—Ä–≤–∏—Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
export const ImagePreloadService = {
  preloadAllImages,
  getImageFromCache,
  areAllImagesLoaded,
  normalizePath
};

export default ImagePreloadService;